worker_processes  1;

events {
  worker_connections  1024;
}

http {

  # options to avoid error code 413 request entity too large
  server_names_hash_bucket_size 512;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 10g;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  disable_symlinks off;

  sendfile             on;
  keepalive_timeout    65;

  gzip on;
  gzip_disable "msie6";

  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  upstream dozzle {
    least_conn;
    server dozzle:8080 max_fails=3 fail_timeout=30s;
  }

  upstream filebrowser {
    least_conn;
    server filebrowser:8888 max_fails=3 fail_timeout=30s;
  }

  upstream deepdetect {
    least_conn;
    server deepdetect:8080 max_fails=3 fail_timeout=30s;
  }

  upstream jupyter {
    least_conn;
    server jupyter:8888 fail_timeout=0;
  }

  server {

    # Allow dns resolution at runtime
    resolver 127.0.0.11 valid=1s ipv6=off;

    # Usage variable force nginx to redo dns resolution every 10s (resolver/valid value)
    set $dozzle http://dozzle;
    set $jupyter http://jupyter;
    set $filebrowser http://filebrowser;
    set $deepdetect http://deepdetect;

    listen 80 default_server;
    listen [::]:80 default_server;

    if ($request_method = 'OPTIONS') {
      return 200;
    }

    root /var/www/html;

    add_header Set-Cookie "userid=$http_XUSERID; Domain=.deepdetect.com; Path=/" always;
    add_header Set-Cookie "usermail=$http_XUSERMAIL; Domain=.deepdetect.com; Path=/" always;
    add_header Set-Cookie "accesstoken=$http_XACCESSTOKEN; Domain=.deepdetect.com; Path=/" always;
    add_header Set-Cookie "username=$http_XUSERNAME; Domain=.deepdetect.com; Path=/" always;

    index index.html;

    # To allow POST on static pages
    error_page  405     =200 $uri;


    location ~* \.(eot|otf|ttf|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;
    }

    location /index.html {
      # React index.html should not be cached, as it contains the js link to the
      # versionned react app
      add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    #
    # Jupyter notebook configuration
    #

    location /code {
      proxy_pass $jupyter;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location ~* /code/(api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
      rewrite ^/code/(.*) /$1 break;

      proxy_pass $jupyter;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

    #
    # Deepdetect API configuration
    #

    location ~ /api/deepdetect/(?<url>.*) {
      proxy_pass $deepdetect/$url$is_args$args;
      rewrite ^/api/(.*) /$1 break;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    #
    # filebrowser configuration
    #

    location ~ /filebrowser {

      # Filebrowser and annotation tools are valid referers
      valid_referers ~\/filebrowser\/files\/ ~\/annotations\/;

      if ($invalid_referer) {
        set $check_referer_delete invalid_referer;
      }

      if ($request_method = DELETE) {
        set $check_referer_delete "${check_referer_delete}_delete";
      }

      if ($check_referer_delete = "invalid_referer_delete") {

        # ####
        # Comment the following line to allow file/folder delete from outside filebrowser
        return 403;
        # ####

      }

      proxy_pass $filebrowser;
      rewrite ^/filebrowser/(.*) /$1 break;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    #
    # dozzle configuration
    #

    location /docker-logs {
      proxy_pass $dozzle;
      rewrite ^/docker-logs/(.*) /$1 break;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    #
    # static access configuration
    #

    location /models {
      alias /opt/platform/models;
      add_header Cache-Control no-cache;
      autoindex on;
    }

    location /data {
      alias /opt/platform/data;
      autoindex on;
    }

    location /json {
      alias /opt/platform;
      add_header Cache-Control no-cache;
      autoindex on;
      autoindex_format json;
    }

  }

}
